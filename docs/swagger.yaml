definitions:
  api.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      due_date:
        type: string
      id:
        type: integer
      priority:
        type: integer
      title:
        type: string
      username:
        type: string
    type: object
  api.createTaskRequest:
    properties:
      description:
        type: string
      due_date:
        type: string
      priority:
        type: integer
      title:
        type: string
    required:
    - description
    - due_date
    - priority
    - title
    type: object
  api.createUserRequest:
    properties:
      email:
        type: string
      full_name:
        minLength: 1
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - full_name
    - password
    - username
    type: object
  api.createUserResponse:
    properties:
      email:
        type: string
      full_name:
        type: string
      username:
        type: string
    type: object
  api.loginUserRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  api.loginUserResponse:
    properties:
      access_token:
        type: string
    type: object
info:
  contact: {}
paths:
  /task:
    get:
      consumes:
      - application/json
      description: get task
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Task'
      security:
      - BearerAuth: []
      summary: Task
      tags:
      - Task
    post:
      consumes:
      - application/json
      description: task create
      parameters:
      - description: Create Task Request
        in: body
        name: createTaskRequest
        required: true
        schema:
          $ref: '#/definitions/api.createTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Task'
      security:
      - BearerAuth: []
      summary: Task
      tags:
      - Task
  /user/create:
    post:
      consumes:
      - application/json
      description: user create
      parameters:
      - description: Create User Request
        in: body
        name: createUserRequest
        required: true
        schema:
          $ref: '#/definitions/api.createUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.createUserResponse'
      summary: User
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      description: user login
      parameters:
      - description: Login User Request
        in: body
        name: loginUserRequest
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.loginUserResponse'
      summary: User
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
